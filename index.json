[{"categories":null,"content":"摘要 买了个路由器总喜欢折腾一些从一开始用的别人编译的路由器得固件从潘多拉到OpenWrt用过零零散散得固件总觉得少了点什么 所以一时兴起自己搞起编译固件 首先使用的是win10的wsl内建ubuntu20.04开始编译但总是报错 本地编译 ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:0:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"添加依赖 sudo apt-get update -y sudo apt-get install -y git subversion g++ zlib1g-dev build-essential git python python3 python3-distutils libncurses5-dev gawk gettext unzip file libssl-dev wget libelf-dev ecj fastjar java-propose-classpath sudo apt-get install build-essential libncursesw5-dev python unzip ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:1:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"clone[lean]源码 git clone https://github.com/coolsnowwolf/lede.git ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:2:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"添加第三方软件包 既然开整那就弄点不一样的 先编辑基础配置文件feeds.conf.default echo \"src-git hipye https://gitee.com/hipye/openwrt-packages\" \u003e\u003e feeds.conf.default ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:3:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"首次编译 ./scripts/feeds clean ./scripts/feeds update -a ./scripts/feeds install -a make menuconfig 前两项的必须选好 第一项是选择cpu的类别 第二项是你的路由型号 ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:4:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"dl包 由于国内的网络环境导致在下载所需软件包时会导致失败这里提供一个国内dl镜像gitee ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:4:1","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"编译 make download -j(nproc) make -j(nproc) V=s 编译好的固件在/lede/bin/targets/xxx下 ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:4:2","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"二次编译 ./scripts/feeds update -a ./scripts/feeds install -a make defconfig make -j8 download make -j(nproc) V=s ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:4:3","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":"云编译 注册一个github账号相信这个不会难先fork一下 esirplayground 的源码 会看得懂.congfig 我的配置内容如下 p2w_r619ac 这里的.config文件会在自动编译被引用到注意.github/workflows下的Build_OP_##.yml 没有则自己新建* 我的示例如下 #=======================================# Description: Build OpenWrt using GitHub Actions # Lisence: MIT # Author: eSirPlayground # Youtube Channel: https://goo.gl/fvkdwm #======================================= name: Build_R619AC on: release: types: [published] push: branches: - master #schedule: # - cron: 0 8 * * 5 #watch: # types: [started] jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@master - name: Initialization environment env: DEBIAN_FRONTEND: noninteractive run: | docker rmi `docker images -q` echo \"Deleting files, please wait ...\" sudo rm -rf \\ /usr/share/dotnet \\ /etc/mysql \\ /etc/php sudo -E apt-get -y purge \\ azure-cli \\ ghc* \\ zulu* \\ hhvm \\ llvm* \\ firefox \\ google* \\ dotnet* \\ powershell \\ openjdk* \\ mysql* \\ php* sudo -E apt-get update sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf sudo -E apt-get -y autoremove --purge sudo -E apt-get clean - name: Clone source code env: REPO_URL: https://github.com/coolsnowwolf/lede REPO_BRANCH: master run: | git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt cd openwrt sed -i '5s/#//' feeds.conf.default echo \"src-git lienol https://github.com/Lienol/openwrt-package\" \u003e\u003e feeds.conf.default - name: Update \u0026 Install feeds working-directory: ./openwrt run: | ./scripts/feeds clean ./scripts/feeds update -a ./scripts/feeds install -a ./scripts/feeds install -a - name: Configuration Customization - Build_p2w-128m env: CONFIG_FILE: 'p2w_r619ac-128m.config' run: | [ -e $CONFIG_FILE ] \u0026\u0026 mv $CONFIG_FILE openwrt/.config chmod +x ./customize.sh \u0026\u0026 ./customize.sh cd openwrt \u0026\u0026 make defconfig - name: Download package working-directory: ./openwrt run: | make download -j$(nproc) find dl -size -1024c -exec ls -l {} \\; find dl -size -1024c -exec rm -f {} \\; - name: Build firmware working-directory: ./openwrt run: | echo -e \"$(nproc) thread build.\" make -j$(nproc) V=s - name : Upload artifact uses: actions/upload-artifact@master with: name: OpenWrt path: openwrt/bin 在第76行处修改配置文件名 在第78行处引用你自动编译的配置名 - name: Configuration Customization - ### #这里修改得名字就是你自动打包后的文件名字 - env : CONFIG_FILE: '###' #这里是你在根目录下自己修改的*.config 第三方编译软件包 Lienol/openwrt 官方原版地址 openwrt 第三方固件地址 lede 利用CI自动构建项目 esirplayground/AutoBuild-OpenWrt Actions-OpenWrt ","date":"2021-02-04","objectID":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/:5:0","tags":null,"title":"为一台路由器编译OpenWrt固件+Actions云编译","uri":"/posts/%E4%B8%BA%E4%B8%80%E5%8F%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BC%96%E8%AF%91openwrt%E5%9B%BA%E4%BB%B6-actions%E4%BA%91%E7%BC%96%E8%AF%91.html/"},{"categories":null,"content":" 系统:Ubuntu16.04 内存:≥4G 磁盘空间:≥50G ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:0:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"安装系统环境变量 sudo apt update sudo apt install git-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \\ lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache \\ libgl1-mesa-dev libxml2-utils xsltproc unzip openjdk-8-jdk ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:1:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"下载repo sudo curl https://storage.googleapis.com/git-repo-downloads/repo \u003e /usr/bin/repo sudo chmod +x /usr/bin/repo ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:2:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"查找设备树 进入twrp 寻找自己的设备型号，点击进入 点击Device Tree / files进入设备树github地址 复制设备树github地址，稍后会用到 根据设备树的安卓版本同步对应的omni源码 比如下图中设备树源码的安卓版本为9.0，则同步9.0的omni源码，如果为8.1则同步8.1的omni源码 同步omni精简源码，-b为对应的安卓版本 mkdir omni cd omni repo init --depth=1 -u git://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-10.0 repo sync -j8 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:3:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"更换aosp镜像地址 sudo vim ~/omni/.repo/manifest.xml 找到下面这句 fetch=\"https://android.googlesource.com\" 将其更改为下面的其中一个：（自己视情况选择） 清华大学AOSP镜像地址： fetch=\"https://aosp.tuna.tsinghua.edu.cn\" 中国科学技术大学AOSP镜像地址： fetch=\"git://mirrors.ustc.edu.cn/aosp\" 可以使用-j参数多开下载进程，适当提高下载效率。 如有提示设置github邮箱和github用户名，请根据提示设置 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:4:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"同步完成后进入device创建机型型号,然后同步机型源码. mkdir -p device/xiaomi git clone https://github.com/TeamWin/android_device_xiaomi_sagit device/xiaomi/sagit ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:5:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"默认设置修改: 进入刚同步下来的sagit目录，打开BoardConfig.mk 默认亮度 TW_DEFAULT_BRIGHTNESS := 1843 默认语言 TW_DEFAULT_LANGUAGE := zh_CN 内核文件路径，如果内核在其他目录则需要修改，默认即可。 TARGET_PREBUILT_KERNEL := device/xiaomi/sagit/prebuilt/Image.gz-dtb 回到源码根目录，进入bootable/recovery 打开data.cpp 修改默认时区: mPersist.SetValue(TW_TIME_ZONE_VAR, \"CST6CDT,M3.2.0,M11.1.0\"); 修改为 mPersist.SetValue(TW_TIME_ZONE_VAR, \"TAIST-8\"); mPersist.SetValue(TW_TIME_ZONE_GUISEL, \"CST6;CDT,M3.2.0,M11.1.0\"); 修改为 mPersist.SetValue(TW_TIME_ZONE_GUISEL, \"TAIST-8;TAIDT\"); mPersist.SetValue(TW_TIME_ZONE_GUIDST, \"1\"); 修改为 mPersist.SetValue(TW_TIME_ZONE_GUIDST, \"0\"); 默认24小时制: mPersist.SetValue(\"tw_military_time\", \"0\"); 改为 mPersist.SetValue(\"tw_military_time\", \"1\"); 默认无震动: mPersist.SetValue(\"tw_button_vibrate\", \"80\"); mPersist.SetValue(\"tw_keyboard_vibrate\", \"40\"); mPersist.SetValue(\"tw_action_vibrate\", \"160\"); 改为 mPersist.SetValue(\"tw_button_vibrate\", \"0\"); mPersist.SetValue(\"tw_keyboard_vibrate\", \"0\"); mPersist.SetValue(\"tw_action_vibrate\", \"0\"); 关闭屏幕超时: mPersist.SetValue(\"tw_screen_timeout_secs\", \"60\"); 改为 mPersist.SetValue(\"tw_screen_timeout_secs\", \"0\"); 更多默认设置请自行发掘，基本都在这两个文件 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:6:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"配置ccache ccache是一个缓存工具，它通过将编译产生的中间文件（预处理得到的代码、输出文件*.o等）缓存起来，待到下次编译同样源文件时直接复制而不是重新生成，以此来提高编译效率。最直接的好处，就是在make clean之后，重新编译的速度能够快不少。 在~/.bashrc的尾部加上以下语句，启用ccache。ccache默认存放在用户目录下（~/.ccache），可以更改环境变量CCACHE_DIR，以设置到其他磁盘分区。 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:7:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"启用ccache export USE_CCACHE=1 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:7:1","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"改变ccache缓存路径 export CCACHE_DIR=~/.ccache 然后重启终端，或运行source ~/bashrc，使上述语句生效。 另外，可以设置ccache缓存所占磁盘空间的大小： ccache -M 50G ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:7:2","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"回到源码根目录，准备编译 export ALLOW_MISSING_DEPENDENCIES=true source build/envsetup.sh lunch ##选择机型，eng后缀 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:8:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"开始编译 make recoveryimage ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:9:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"编译完成 目录在out/target/product/\u003c设备名\u003e/recovery.img复制出来刷入即可 默认编译的是官方最新版TWRP，如果需要编译橙狐，红狼之类的TWRP，请删除bootable/recovery，然后cd进bootable同步橙狐或红狼的TWRP源码，源码在xda发布帖会附带有，如果配套有设备树源码需要连device/xiaomi/sagit一起删除，然后再同步橙狐或红狼配套的设备树源码，注意设备树源码安卓版本要和omni安卓版本一致。 ","date":"2021-02-04","objectID":"/posts/%E7%BC%96%E8%AF%91twrp.html/:10:0","tags":null,"title":"编译twrp","uri":"/posts/%E7%BC%96%E8%AF%91twrp.html/"},{"categories":null,"content":"首先使用service mysql start 启动mysql服务，然后在终端执行 usermod -aG aid_inet mysql 然后开始设置初始密码等，执行 mysql_secure_installation ERROR 2002 (HY000): Can’t connect to MySQL server on 默认的配置文件地址 vim /etc/mysql/mariadb.conf.d/50-server.cnf # 修改为你本机的地址 bind-address = x.x.x.x ERROR 1130 (HY000): Host ‘192.168.x.x’ is not allowed to connect to this MariaDB server GRANTALLPRIVILEGESON*.*TO'root'@'%'IDENTIFIEDBY'morizen'WITHGRANTOPTION;flushprivileges; 表示授权某个用户在哪些主机上可以对哪些数据库和表进行哪些操作。 ON . db.table: 数据库和数据表 TO user: 要授权的用户 @ host: %’表示任何主机 参考 http://blog.csdn.net/leroy008/article/details/16116847 ","date":"2021-02-04","objectID":"/posts/linuxdepoly%E7%BC%96%E8%AF%91mysql.html/:0:0","tags":null,"title":"Linuxdepoly编译MySQL","uri":"/posts/linuxdepoly%E7%BC%96%E8%AF%91mysql.html/"},{"categories":null,"content":"一、添加开机自启服务 在CentOS 7中添加开机自启服务非常方便，只需要两条命令(以Jenkins为例)： systemctl enable jenkins.service #设置jenkins服务为自启动服务 sysstemctl start jenkins.service #启动jenkins服务 二、添加开机自启脚本 在centos7中增加脚本有两种常用的方法，以脚本autostart.sh为例： #!/bin/bash #description:开机自启脚本 /usr/local/tomcat/bin/startup.sh #启动tomcat 方法一 1、赋予脚本可执行权限（/opt/script/autostart.sh是你的脚本路径） chmod +x /opt/script/autostart.sh 2、打开/etc/rc.d/rc.local或/etc/rc.local文件，在末尾增加如下内容 su - user -c ‘/opt/script/autostart.sh’ 3、在centos7中，/etc/rc.d/rc.local的权限被降低了，所以需要执行如下命令赋予其可执行权限 chmod +x /etc/rc.d/rc.local 方法二 1、将脚本移动到/etc/rc.d/init.d目录下 mv /opt/script/autostart.sh /etc/rc.d/init.d 2、增加脚本的可执行权限 chmod +x /etc/rc.d/init.d/autostart.sh 3、添加脚本到开机自动启动项目中 cd /etc/rc.d/init.d chkconfig –add autostart.sh chkconfig autostart.sh on rclone mount moriz:backups /www/wwwroot/nova.omoe.cc/mirror --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 exit 0 二、自定义服务文件，添加到系统服务，通过systemctl管理 1.写服务文件 [Unit]:服务的说明 Description:描述服务 After:描述服务类别 [Service]服务运行参数的设置 Type=forking是后台运行的形式 ExecStart为服务的具体运行命令 ExecReload为重启命令 ExecStop为停止命令 PrivateTmp=True表示给服务分配独立的临时空间 注意：启动、重启、停止命令全部要求使用绝对路径 [Install]服务安装的相关设置，可设置为多用户 示例：nginx.service [Unit] Description=nginx - high performance web server After=network.target remote-fs.target nss-lookup.target [Service] Type=forking ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s stop [Install] WantedBy=multi-user.target redis.service [Unit] Description=Redis After=network.target remote-fs.target nss-lookup.target [Service] Type=forking ExecStart=/usr/local/bin/redis-server /etc/redis.conf ExecStop=kill -INT `cat /tmp/redis.pid` User=www Group=www [Install] WantedBy=multi-user.target ","date":"2021-02-04","objectID":"/posts/centos7%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF.html/:0:0","tags":null,"title":"Centos7开机自启","uri":"/posts/centos7%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF.html/"},{"categories":null,"content":"保存目录 以754的权限保存在目录： /usr/lib/systemd/system 3.设置开机自启动 任意目录下执行 systemctl enable nginx.service 4.其他命令 启动nginx服务 systemctl start nginx.service 设置开机自启2.保存目录 以754的权限保存在目录： /usr/lib/systemd/system 3.设置开机自启动 任意目录下执行 systemctl enable nginx.service 4.其他命令 启动nginx服务 systemctl start nginx.service 设置开机自启动 systemctl enable nginx.service 停止开机自启动 systemctl disable nginx.service 查看服务当前状态 systemctl status nginx.service 重新启动服务 systemctl restart nginx.service 查看所有已启动的服务 systemctl list-units –type=service systemctl enable nginx.service 停止开机自启动 systemctl disable nginx.service 查看服务当前状态 systemctl status nginx.service 重新启动服务 systemctl restart nginx.service 查看所有已启动的服务 systemctl list-units –type=service ","date":"2021-02-04","objectID":"/posts/centos7%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF.html/:1:0","tags":null,"title":"Centos7开机自启","uri":"/posts/centos7%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF.html/"},{"categories":null,"content":"写在前面 aria2主要功能当然是下载🙂虽然是废话但是既然叫做下载神器它的用处经过网络上各位大神轮番折腾 发掘出很多可以称得上老司机必备的功能。比如BT下载(全称: Bittorrent )/滑稽/ 使用文档 官方文档(en) ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:0:1","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"编译前注意事项 根据系统以及平台的不同，编译的方法大同小异。本教程仅提供linux发行版Kali liunx的编译方法。 因为国内的网络你懂的的某些特殊原因，可能在gayhub上下载作者提供的源码的时候会出现下载失败以及访问龟速还有 404/笑而不语。 由于不是和我存在同样操作环境下可能会有不同状况发生所以请善用谷歌Or百度 ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:1:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"添加依赖 先更新一下系统的软件 sudo apt-get update \u0026\u0026 apt-get upgrade -y 安装编译时官方说明需要的依赖 sudo apt-get install -y gcc libgnutls28-dev nettle-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev wget perl libsqlite3-dev pkg-config libcppunit-dev autoconf automake autotools-dev autopoint libtool git c++11 g++ 2019.04.06新增ubuntu18.10编译条件 sudo apt-get update \u0026\u0026 sudo apt-get install libgnutls28-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libcppunit-dev autoconf automake autotools-dev autopoint libtool git gcc g++ libxml2-dev make quilt centos指令如下 yum install gcc-g++ gcc -y 下载aria2的源码这里我下载的是1.34版本 wget https://github.com/aria2/aria2/archive/release-1.34.0.tar.gz 解压😳 tar zxvf *1.34*.gz ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:2:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"源码下载及修改 接下来就是最重要的步骤了 先cd进你解压完毕的目录 cd *aria2* 修改源码修改线程 cd src ~~OptionHandler* op(newNumberOptionHandler(PREF_MAX_CONNECTION_PER_SERVER, TEXT_MAX_CONNECTION_PER_SERVER, ‘1’, 1, 16, ‘x’));~~ 修改为 ~~OptionHandler* op(new NumberOptionHandler(PREF_MAX_CONNECTION_PER_SERVER, TEXT_MAX_CONNECTION_PER_SERVER, ‘128’, 1, -1, ‘x’));~~ PREF_MIN_SPLIT_SIZE, TEXT_MIN_SPLIT_SIZE, ‘20M’, 1_m, 1_g, ‘k’)); 修改为 PREF_MIN_SPLIT_SIZE, TEXT_MIN_SPLIT_SIZE, ‘4K’, 1_k, 1_g, ‘k’)); PREF_PIECE_LENGTH, TEXT_PIECE_LENGTH, ‘1M’, 1_m, 1_g)); 修改为 PREF_PIECE_LENGTH, TEXT_PIECE_LENGTH, ‘4k’, 1_k, 1_g)); PREF_CONNECT_TIMEOUT, TEXT_CONNECT_TIMEOUT, ‘60’, 1, 600)); 修改为 PREF_CONNECT_TIMEOUT, TEXT_CONNECT_TIMEOUT, ‘30’, 1, 600)); new NumberOptionHandler(PREF_RETRY_WAIT, TEXT_RETRY_WAIT, ‘0’, 0, 600)); 修改为 new NumberOptionHandler(PREF_RETRY_WAIT, TEXT_RETRY_WAIT, ‘2’, 0, 600)); new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, ‘5’, 1, -1, ’s')); 修改为 new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, ‘8’, 1, -1, ’s')); 2021.02.02文字替换 sed -i 's/\"1\", 1, 16/\"128\", 1, -1/g' ./src/OptionHandlerFactory.cc sed -i 's/\"20M\", 1_m, 1_g/\"4K\", 1_k, 1_g/g' ./src/OptionHandlerFactory.cc sed -i 's/PREF_CONNECT_TIMEOUT, TEXT_CONNECT_TIMEOUT, \"60\", 1, 600/PREF_CONNECT_TIMEOUT, TEXT_CONNECT_TIMEOUT, \"30\", 1, 600/g' ./src/OptionHandlerFactory.cc sed -i 's/PREF_PIECE_LENGTH, TEXT_PIECE_LENGTH, \"1M\", 1_m, 1_g/PREF_PIECE_LENGTH, TEXT_PIECE_LENGTH, \"4k\", 1_k, 1_g/g' ./src/OptionHandlerFactory.cc sed -i 's/new NumberOptionHandler(PREF_RETRY_WAIT, TEXT_RETRY_WAIT, \"0\", 0, 600/new NumberOptionHandler(PREF_RETRY_WAIT, TEXT_RETRY_WAIT, \"2\", 0, 600/g' ./src/OptionHandlerFactory.cc sed -i 's/new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, \"5\", 1, -1,/new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, \"8\", 1, -1,/g' ./src/OptionHandlerFactory.cc 这里我放出我已经修改好的1.34版本128线程的源码包 128线程打包[github] 这里我用的文本编辑器是nano没有则安装即可 nano保存退出的快捷键为ctrl+x 然后点击Y键即可 代码检查 sudo autoreconf -i ./configure 再次执行代码检查(若代码检查出现错误则执行此步骤) 以上 ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:3:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"编译 安装 sudo make \u0026\u0026 make install 等待10分钟左右输入 aria2c -v 成功则显示如下 下载文件时只需输入 aria2c 下载链接 承接上一个关于aria2下载功能。aria2为众多老司机喜欢的一点就是可是利用Bittorrent功能下载种子or磁力😏 ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:4:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"创建配置文件 mkdir /etc/aria2 touch /etc/aria2/aria2.conf vim /etc/aria2/aria2.conf ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:5:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"创建默认的配置文件/etc/aria2 Esc+:+wq 保存退出 我的配置文件 ##下载默认的目录 #下载的文件存放 dir=/mnt/sdcard/Downloads #开启ipv6 disable-ipv6=true #开启rpc enable-rpc=true #总是保持连接 rpc-allow-origin-all=true #监听rpc rpc-listen-all=true #rpc-listen-port=6800 #断点续传 continue=true #进度保存.默认从session中读取下载的文件 input-file=/etc/aria2/aria2.session save-session=/etc/aria2/aria2.session save-session-interval=30 #最大同时下载量 #max-concurrent-downloads=3 # 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M disk-cache=32M listen-port=51413 ## BT/PT下载相关 ## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999 listen-port=51413 # 单个种子最大连接数, 默认:55 #bt-max-peers=55 # 打开DHT功能, PT需要禁用, 默认:true enable-dht=true # 打开IPv6 DHT功能, PT需要禁用 enable-dht6=false # DHT网络监听端口, 默认:6881-6999 #dht-listen-port=6881-6999 # 本地节点查找, PT需要禁用, 默认:false bt-enable-lpd=false # 种子交换, PT需要禁用, 默认:true enable-peer-exchange=false # 每个种子限速, 对少种的PT很有用, 默认:50K #bt-request-peer-speed-limit=50K # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.77 # 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0 seed-ratio=1.0 # 强制保存会话, 即使任务已经完成, 默认:false # 强制保存会话, 即使任务已经完成, 默认:false # 较新的版本开启后会在任务完成后依然保留.aria2文件 #force-save=false # BT校验相关, 默认:true #bt-hash-check-seed=true # 继续之前的BT任务时, 无需再次校验, 默认:false bt-seed-unverified=true # 保存磁力链接元数据为种子文件(.torrent文件), 默认:false bt-save-metadata=true # bt-tracker数据来自https://github.com/ngosang/trackerslist/blob/master/trackers_all_udp.txt bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.internetwarriors.net:1337/announce,http://tracker.internetwarriors.net:1337/announce,udp://tracker.opentrackr.org:1337/announce,udp://9.rarbg.to:2710/announce,udp://exodus.desync.com:6969/announce,udp://tracker1.itzmx.com:8080/announce,udp://explodie.org:6969/announce,http://tracker1.itzmx.com:8080/announce,http://explodie.org:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://open.demonii.si:1337/announce,udp://denis.stalker.upeer.me:6969/announce,udp://thetracker.org:80/announce,udp://bt.xxx-tracker.com:2710/announce,udp://tracker.torrent.eu.org:451/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.port443.xyz:6969/announce,udp://retracker.lanta-net.ru:2710/announce,http://tracker.port443.xyz:6969/announce,udp://tracker.uw0.xyz:6969/announce,udp://tracker.iamhansen.xyz:2000/announce,udp://open.stealth.si:80/announce,http://open.acgnxtracker.com:80/announce,udp://zephir.monocul.us:6969/announce,udp://tracker.vanitycore.co:6969/announce,https://tracker.fastdownload.xyz:443/announce,https://opentracker.xyz:443/announce,http://retracker.telecom.by:80/announce,http://opentracker.xyz:80/announce,http://open.trackerlist.xyz:80/announce,udp://tracker.cyberia.is:6969/announce,http://tracker.city9x.com:2710/announce,http://tracker3.itzmx.com:6961/announce,http://torrent.nwps.ws:80/announce,wss://tracker.openwebtorrent.com:443/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker1.wasabii.com.tw:6969/announce,udp://tracker.swateam.org.uk:2710/announce,udp://tracker.kamigami.org:2710/announce,udp://tracker.filepit.to:6969/announce,udp://tracker.dler.org:6969/announce,udp://torrentclub.tech:6969/announce,udp://pubt.in:2710/announce,udp://bittracker.ru:6969/announce,udp://amigacity.xyz:6969/announce,http://tracker4.itzmx.com:2710/announce,http://tracker2.itzmx.com:6961/announce,http://tracker1.wasabii.com.tw:6969/announce,http://tracker.torrentyorg.pl:80/announce,http://torrentclub.tech:6969/announce,http://t.nyaatracker.com:80/announce,http://retracker.mgts.by:80/announce,http://private.minimafia.nl:443/announce,http://prestige.minimafia.nl:443/announce,http://open.acgtracker.com:1096/announce,http://fxtt.ru:80/announce,http://bittracker.ru:80/announce,http://amigacity.xyz:6969/announce,http://0d.kebhana.mx:443/announce,wss://tracker.fastcast.nz:443/announce,wss://tracker.btorrent.xyz:443/announce,wss://ltrackr.iamhansen.xyz:443/announce,udp://tracker.justseed.it:1337/announce,udp://packages.crunchbangplusplus.org:6969/announce,https://1337.abcvg.info:443/an","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:6:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"执行配置文件 aria2c --conf-path=/etc/aria2/aria2.conf -D ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:7:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"参考链接 [Jianshu \u0026\u0026 一切不如学习] ","date":"2021-02-02","objectID":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/:8:0","tags":null,"title":"Aria2多线程","uri":"/posts/aria2%E5%A4%9A%E7%BA%BF%E7%A8%8B.html/"},{"categories":null,"content":"linuxdepoly自用命令合集 ","date":"2021-02-02","objectID":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/:0:0","tags":null,"title":"Linuxdepoly自用命令合集","uri":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/"},{"categories":null,"content":"基础软件安装 apt install fish screen git wget nload htop fuse p7zip-full dh-make dpkg-dev debhelper fakeroot build-essential mariadb-server rclone vim -y ","date":"2021-02-02","objectID":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/:1:0","tags":null,"title":"Linuxdepoly自用命令合集","uri":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/"},{"categories":null,"content":"编译 wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz wget https://github.com/cloudreve/Cloudreve/releases/download/3.2.1/cloudreve_3.2.1_linux_arm64.tar.gz ","date":"2021-02-02","objectID":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/:2:0","tags":null,"title":"Linuxdepoly自用命令合集","uri":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/"},{"categories":null,"content":"添加开机自启脚本 linux系统/etc/init.d目录下的开机自启脚本 1.复制或软连接脚本到/etc/init.d/目录下 2.脚本内容如下，加粗内容是模板性注释，不能更改。 $cat /etc/init.d/test.sh #!/bin/bash ### BEGIN INIT INFO # Provides: test.sh //test.sh是自己创建的脚本名称 # Required-Start: $local_fs $network $remote_fs $syslog # Required-Stop: $local_fs $network $remote_fs $syslog # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: starts the test.sh daemon //test.sh是自己创建的脚本名称 # Description: starts test.sh using start-stop-daemon //test.sh是自己创建的脚本名称 ### END INIT INFO sudo cp /media/share/frp_0.27.0_linux_amd64.tar.gz /opt/ //开机后需要执行的命令 3.赋权限给脚本文件 $sudo chmod 755 /etc/init.d/test.sh 4.加入开机启动 ```bash sudo update-rc.d test.sh defaults 90 5.重启验证 结束 查看脚本自启 ll /etc/init.d ","date":"2021-02-02","objectID":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/:3:0","tags":null,"title":"Linuxdepoly自用命令合集","uri":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/"},{"categories":null,"content":"开启nginx目录展示 【Nginx】Nginx打开目录浏览功能(autoindex) 转载 Nginx默认是不允许列出整个目录的。如需此功能，打开nginx.conf文件或你要启用目录浏览虚拟主机的配置文件，在server或location 段里添加上autoindex on;来启用目录流量，下面会分情况进行说明。 另外Nginx的目录流量有两个比较有用的参数，可以根据自己的需求添加： 配置 说明 autoindex_exact_size 默认为 on，显示出文件的确切大小，单位是bytes。 改为 off 后，显示出文件的大概大小，单位是kB或者MB或者GB autoindex_localtime 默认为off，显示的文件时间为GMT时间。 改为on后，显示的文件时间为文件的服务器时间 1. 整个虚拟主机开启目录流量 在server段添加 location / { autoindex on; autoindex_localtime on; } 2. 单独目录开启目录流量 2.1 直接二级目录开启目录流量 location /down/ { autoindex on; } 2.2 虚拟目录开启目录流量 location /down/ { alias /home/wwwroot/lnmp/test/; autoindex on; } ","date":"2021-02-02","objectID":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/:4:0","tags":null,"title":"Linuxdepoly自用命令合集","uri":"/posts/linuxdepoly%E8%87%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html/"},{"categories":null,"content":"对于内核开源[1]的手机，国内外一些大神总会第一时间将其进行机型适配。以此开发了许许多多著名的ROM，例如~~CM~~现在是Lineage[2]RR[3]添加了各式各样可玩性。当然这一切都归功于开源大法好OpenSource[5] ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:0:0","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"1. 机型是否能够解锁unlock ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:1:0","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"1.1 解除锁定能够进行线刷bootload ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:1:1","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"1.2 利用bootload刷入twrp[4] 1.2.1 利用twrp双清wipe cache And wipe data 这里的data指的是非内置存储当然8.0之后谷歌对权限收紧，刷完之后也要清除 1.2.2 刷入Gsi时不用清除System wipe system 1.2.3 刷入ROM时要注意底包是否匹配 ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:1:2","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"1.3 使用twrp刷入你下载ROM包 1.3.1 刷入 .img or .Zip 格式的后缀 1.3.1.1 刷入.img为后缀的通刷包时一般是不用wipe system 1.3.1.2 .zip为后缀时，除非是升级包。否则一定要清除wipe system ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:1:3","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"1.4 谷歌验证 ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:1:4","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"由于国内网络的特殊性，而谷歌的服务器被墙。所以每次新刷rom开机时候很大一部分的的人都会卡在开机验证这一界面 Disable setupwizard 利用twrp刷入 ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:2:0","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"这里另外提供一种方法供没有准备的小伙伴刷机时遇到这个问题 进入rec 挂载 system 进入rec里的终端管理器 输入命令行 vi/system/build.prop点击`i`变成可输入模式在尾部键入ro.setupwizard.mode=DISABLED点击Esc+:+wq保存退出 or echo \"ro.setupwizard.mode=DISABLED\" \u003e\u003e/system/build.prop 以上三种方法大同小异 ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:3:0","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"2. 下载rom 这里列几个我经常找rom资源的网站 Xda论坛[可能需要小飞机] 小米机型底包#稳定版 小米机型底包#开发版 [Aex] 听说是印度人人开发的包，之前用过觉得特色不错 [Lineage] 不废话 [ResurrectionRemix] 以高定制而出名，曾经我最喜欢这个rom，然鹅隐性bug你能忍得了 [Pe] 我当前正在用的包，优化得很舒服。最接近原生的rom之一 ","date":"2021-02-02","objectID":"/posts/perom%E7%AE%80%E8%BF%B0.html/:4:0","tags":null,"title":"Perom简述","uri":"/posts/perom%E7%AE%80%E8%BF%B0.html/"},{"categories":null,"content":"https://bigota.d.miui.com/20.3.26/miui_MI8SE_20.3.26_335c159428_10.0.zip 卡刷包 https://bigota.d.miui.com/20.3.19/miui_MI8SE_20.3.19_73d8cc98c5_10.0.zip 卡刷包 https://bigota.d.miui.com/20.3.12/miui_MI8SE_20.3.12_68801a8645_10.0.zip 卡刷包 https://bigota.d.miui.com/20.3.5/miui_MI8SE_20.3.5_c819c23f8f_10.0.zip 卡刷包 https://bigota.d.miui.com/20.2.27/miui_MI8SE_20.2.27_4be3529921_10.0.zip 卡刷包 https://bigota.d.miui.com/20.1.16/miui_MI8SE_20.1.16_1f09c9e99b_10.0.zip 卡刷包 https://bigota.d.miui.com/20.1.9/miui_MI8SE_20.1.9_87dde6f09d_10.0.zip 卡刷包 https://bigota.d.miui.com/20.1.2/miui_MI8SE_20.1.2_8df188ec0c_10.0.zip 卡刷包 https://bigota.d.miui.com/9.12.26/miui_MI8SE_9.12.26_2184cf4a5e_10.0.zip 卡刷包 https://bigota.d.miui.com/9.12.19/miui_MI8SE_9.12.19_322e5eadb0_10.0.zip 卡刷包 https://bigota.d.miui.com/9.12.12/miui_MI8SE_9.12.12_a2e9f71599_10.0.zip 卡刷包 https://bigota.d.miui.com/9.12.5/miui_MI8SE_9.12.5_6a597d28d0_10.0.zip 卡刷包 https://bigota.d.miui.com/9.11.21/miui_MI8SE_9.11.21_f33d769c44_10.0.zip 卡刷包 https://bigota.d.miui.com/9.11.14/miui_MI8SE_9.11.14_9afc5412d6_10.0.zip 卡刷包 https://bigota.d.miui.com/9.11.7/miui_MI8SE_9.11.7_515dcc6e7f_10.0.zip 卡刷包 https://bigota.d.miui.com/9.10.31/miui_MI8SE_9.10.31_97be08a1c7_10.0.zip 卡刷包 https://bigota.d.miui.com/9.10.24/miui_MI8SE_9.10.24_7a4aed1a73_10.0.zip 卡刷包 https://bigota.d.miui.com/9.10.10/miui_MI8SE_9.10.10_83cd74bcfa_9.0.zip 卡刷包 https://bigota.d.miui.com/9.9.26/miui_MI8SE_9.9.26_249e7cd055_9.0.zip 卡刷包 http://bigota.d.miui.com/9.9.3/miui_MI8SE_9.9.3_a9d719f08b_9.0.zip 卡刷包 http://bigota.d.miui.com/9.9.3/sirius_images_9.9.3_20190904.0000.00_9.0_cn_9f1d8a6849.tgz 线刷包 http://bigota.d.miui.com/9.8.22/miui_MI8SE_9.8.22_c525a5cc89_9.0.zip 卡刷包 http://bigota.d.miui.com/9.8.22/sirius_images_9.8.22_20190822.0000.00_9.0_cn_911da88274.tgz 线刷包 http://bigota.d.miui.com/9.8.15/miui_MI8SE_9.8.15_09d2c15b1b_9.0.zip 卡刷包 http://bigota.d.miui.com/9.8.15/sirius_images_9.8.15_20190815.0000.00_9.0_cn_a3236f0497.tgz 线刷包 http://bigota.d.miui.com/9.8.1/miui_MI8SE_9.8.1_ace4b18390_9.0.zip 卡刷包 http://bigota.d.miui.com/9.8.1/sirius_images_9.8.1_20190801.0000.00_9.0_cn_8c6e7c2433.tgz 线刷包 http://bigota.d.miui.com/9.7.25/miui_MI8SE_9.7.25_92a3fadbc8_9.0.zip 卡刷包 http://bigota.d.miui.com/9.7.25/sirius_images_9.7.25_20190725.0000.00_9.0_cn_d97627e6c1.tgz 线刷包 http://bigota.d.miui.com/9.7.18/miui_MI8SE_9.7.18_0e9fc7e264_9.0.zip 卡刷包 http://bigota.d.miui.com/9.7.18/sirius_images_9.7.18_20190718.0000.00_9.0_cn_93f7c23497.tgz 线刷包 http://bigota.d.miui.com/9.7.11/miui_MI8SE_9.7.11_b26eecf5fc_9.0.zip 卡刷包 http://bigota.d.miui.com/9.7.11/sirius_images_9.7.11_20190711.0000.00_9.0_cn_951ee982a4.tgz 线刷包 http://bigota.d.miui.com/9.7.4/miui_MI8SE_9.7.4_3423b80e1d_9.0.zip 卡刷包 http://bigota.d.miui.com/9.7.4/sirius_images_9.7.4_20190704.0000.00_9.0_cn_6e2f86dc11.tgz 线刷包 http://bigota.d.miui.com/9.6.27/miui_MI8SE_9.6.27_8649d0115f_9.0.zip 卡刷包 http://bigota.d.miui.com/9.6.27/sirius_images_9.6.27_20190627.0000.00_9.0_cn_66a6c8909c.tgz 线刷包 http://bigota.d.miui.com/9.6.20/miui_MI8SE_9.6.20_8583335d32_9.0.zip 卡刷包 http://bigota.d.miui.com/9.6.20/sirius_images_9.6.20_20190620.0000.00_9.0_cn_f00f77949b.tgz 线刷包 http://bigota.d.miui.com/9.6.13/miui_MI8SE_9.6.13_2849c128af_9.0.zip 卡刷包 http://bigota.d.miui.com/9.5.30/miui_MI8SE_9.5.30_885b7ad76c_9.0.zip 卡刷包 http://bigota.d.miui.com/9.5.30/sirius_images_9.5.30_20190530.0000.00_9.0_cn_b0469785a2.tgz 线刷包 http://bigota.d.miui.com/9.5.23/miui_MI8SE_9.5.23_4373786372_9.0.zip 卡刷包 http://bigota.d.miui.com/9.5.16/miui_MI8SE_9.5.16_8a3f088578_9.0.zip 卡刷包 http://bigota.d.miui.com/9.5.16/sirius_images_9.5.16_20190516.0000.00_9.0_cn_af261833a2.tgz 线刷包 http://bigota.d.miui.com/9.5.9/miui_MI8SE_9.5.9_09aa77511c_9.0.zip 卡刷包 http://bigota.d.miui.com/9.5.9/sirius_images_9.5.9_20190509.0000.00_9.0_cn_324f125378.tgz 线刷包 http://bigota.d.miui.com/9.4.25/miui_MI8SE_9.4.25_ccbd80f295_9.0.zip 卡刷包 http://bigota.d.miui.com/9.4.25/sirius_images_9.4.25_20190425.0000.00_9.0_cn_fa246927e0.tgz 线刷包 http://bigota.d.miui.com/9.4.19/miui_MI8SE_9.4.19_de643","date":"2021-01-17","objectID":"/posts/picassoredmik305g#siriusxiaomimi8se%23rom.html/:0:0","tags":null,"title":"Picasso(Redmik305G)#sirius(XiaomiMi8se)#rom","uri":"/posts/picassoredmik305g#siriusxiaomimi8se%23rom.html/"}]